
//! Autogenerated weights for `pallet_did`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-29, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/watr-node
// benchmark
// pallet
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_did
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./runtime/devnet/src/weights/pallet_did.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_did`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_did::WeightInfo for WeightInfo<T> {
	// Storage: DID Did (r:1 w:1)
	// Storage: DID Services (r:1 w:1)
	/// The range of component `m` is `[0, 10]`.
	fn create_did(m: u32, ) -> Weight {
		Weight::from_ref_time(24_000_000 as u64)
			// Standard Error: 3_536
			.saturating_add(Weight::from_ref_time(3_095_567 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(m as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(m as u64)))
	}
	// Storage: DID Did (r:1 w:1)
	fn update_did() -> Weight {
		Weight::from_ref_time(16_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DID Did (r:1 w:1)
	// Storage: DID Issuers (r:1 w:0)
	// Storage: DID Services (r:1 w:1)
	/// The range of component `m` is `[0, 10]`.
	fn remove_did(m: u32, ) -> Weight {
		Weight::from_ref_time(26_000_000 as u64)
			// Standard Error: 3_392
			.saturating_add(Weight::from_ref_time(2_768_767 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(m as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(m as u64)))
	}
	// Storage: DID Did (r:1 w:1)
	// Storage: DID Services (r:1 w:1)
	/// The range of component `m` is `[0, 10]`.
	fn add_did_services(m: u32, ) -> Weight {
		Weight::from_ref_time(15_000_000 as u64)
			// Standard Error: 3_872
			.saturating_add(Weight::from_ref_time(3_214_750 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(m as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(m as u64)))
	}
	// Storage: DID Did (r:1 w:1)
	// Storage: DID Services (r:1 w:1)
	/// The range of component `m` is `[0, 10]`.
	fn remove_did_services(m: u32, ) -> Weight {
		Weight::from_ref_time(15_000_000 as u64)
			// Standard Error: 4_341
			.saturating_add(Weight::from_ref_time(2_965_512 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(m as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(m as u64)))
	}
	// Storage: DID Did (r:2 w:0)
	// Storage: DID Issuers (r:1 w:0)
	// Storage: DID CredentialsTypes (r:1 w:0)
	// Storage: DID IssuedCredentials (r:1 w:1)
	/// The range of component `c` is `[0, 50]`.
	fn issue_credentials(c: u32, ) -> Weight {
		Weight::from_ref_time(21_000_000 as u64)
			// Standard Error: 1_757
			.saturating_add(Weight::from_ref_time(3_920_355 as u64).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
	}
	// Storage: DID Did (r:1 w:0)
	// Storage: DID IssuedCredentials (r:1 w:1)
	/// The range of component `c` is `[0, 50]`.
	fn revoke_credentials(c: u32, ) -> Weight {
		Weight::from_ref_time(15_000_000 as u64)
			// Standard Error: 2_459
			.saturating_add(Weight::from_ref_time(4_961_356 as u64).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(c as u64)))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(c as u64)))
	}
	// Storage: DID Issuers (r:1 w:1)
	fn add_issuer() -> Weight {
		Weight::from_ref_time(13_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DID Issuers (r:1 w:1)
	fn revoke_issuer() -> Weight {
		Weight::from_ref_time(15_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DID Issuers (r:1 w:1)
	fn reactivate_issuer() -> Weight {
		Weight::from_ref_time(14_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DID Issuers (r:1 w:1)
	fn remove_issuer() -> Weight {
		Weight::from_ref_time(14_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DID CredentialsTypes (r:1 w:1)
	/// The range of component `m` is `[0, 50]`.
	fn add_credentials_type(m: u32, ) -> Weight {
		Weight::from_ref_time(12_000_000 as u64)
			// Standard Error: 1_171
			.saturating_add(Weight::from_ref_time(425_412 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DID CredentialsTypes (r:1 w:1)
	/// The range of component `m` is `[0, 50]`.
	fn remove_credentials_type(m: u32, ) -> Weight {
		Weight::from_ref_time(13_000_000 as u64)
			// Standard Error: 938
			.saturating_add(Weight::from_ref_time(379_747 as u64).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
