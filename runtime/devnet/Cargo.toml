[package]
name = "watr-devnet-runtime"
version = "1.23.0"
authors = ["Parity Technologies <admin@parity.io>"]
description = "Watr Devnet Runtime"
license = "GPL-3.0-only"
homepage = "https://www.watr.org/"
repository = "https://github.com/Watr-Protocol/watr"
edition = "2021"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
hex-literal = { workspace = true, optional = true }
log = { workspace = true }
parity-scale-codec = { workspace = true, features = ["derive"] }
scale-info = { workspace = true, features = ["derive"] }
smallvec = { workspace = true }

# Substrate
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-assets = { workspace = true }
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-collective = { workspace = true }
pallet-membership = { workspace = true }
pallet-preimage = { workspace = true }
pallet-session = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
sp-api = { workspace = true }
pallet-proxy = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-parachain = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true, optional = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
cumulus-primitives-utility = { workspace = true }
pallet-collator-selection = { workspace = true }

parachains-common = { workspace = true }
parachain-info = { workspace = true }

# Frontier
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"]}

# Frontier FRAME
pallet-base-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
# Precompiles
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-dispatch = { workspace = true }

# Astar Pallets
pallet-evm-precompile-assets-erc20 = { workspace = true }
pallet-xc-asset-config = { workspace = true }
precompile-utils = { workspace = true }
pallet-block-reward = { workspace = true, features = ["serde"] }

pallet-multisig = { workspace = true }
pallet-identity = { workspace = true }

# Local
watr-common = { workspace = true }
pallet-motion = { workspace = true }
pallet-did = { workspace = true }

[features]
default = [
    "std",
]
std = [
    "log/std",
    "scale-info/std",
    "cumulus-pallet-aura-ext/std",
    "cumulus-pallet-dmp-queue/std",
    "cumulus-pallet-parachain-system/std",
    "cumulus-pallet-xcm/std",
    "cumulus-pallet-xcmp-queue/std",
    "cumulus-primitives-core/std",
    "cumulus-primitives-timestamp/std",
    "cumulus-primitives-utility/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "pallet-assets/std",
    "pallet-aura/std",
    "pallet-authorship/std",
    "pallet-balances/std",
    "pallet-block-reward/std",
    "pallet-collator-selection/std",
    "pallet-collective/std",
    "pallet-motion/std",
    "pallet-did/std",
    "pallet-preimage/std",
    "pallet-session/std",
    "pallet-scheduler/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-treasury/std",
    "pallet-utility/std",
    "pallet-xcm/std",
    "parachain-info/std",
    "parity-scale-codec/std",
    "polkadot-parachain/std",
    "polkadot-primitives/std",
    "polkadot-runtime-common/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "xcm-builder/std",
    "xcm-executor/std",
    "xcm/std",
    "pallet-membership/std",
    "pallet-multisig/std",
    "pallet-identity/std",
    "pallet-proxy/std",
    # Frontier
    "fp-rpc/std",
    "fp-self-contained/std",
    # Frontier FRAME
    "pallet-base-fee/std",
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-evm-precompile-simple/std",
    "pallet-evm-precompile-assets-erc20/std",
    "pallet-evm-precompile-blake2/std",
    "pallet-evm-precompile-bn128/std",
    "pallet-evm-precompile-dispatch/std",
    "pallet-xc-asset-config/std",
]
runtime-benchmarks = [
    "hex-literal",
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "pallet-assets/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-sudo/runtime-benchmarks",
    "pallet-block-reward/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pallet-collator-selection/runtime-benchmarks",
    "pallet-ethereum/runtime-benchmarks",
    "pallet-evm/runtime-benchmarks",
    "pallet-membership/runtime-benchmarks",
    "pallet-preimage/runtime-benchmarks",
    "pallet-scheduler/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-treasury/runtime-benchmarks",
    "pallet-utility/runtime-benchmarks",
    "pallet-multisig/runtime-benchmarks",
    "pallet-identity/runtime-benchmarks",
    "pallet-proxy/runtime-benchmarks",
    "pallet-xcm/runtime-benchmarks",
    "pallet-xc-asset-config/runtime-benchmarks",
    "pallet-did/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "xcm-builder/runtime-benchmarks",
    "cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
    "cumulus-pallet-xcmp-queue/runtime-benchmarks",
]
try-runtime = [
    "frame-executive/try-runtime",
    "frame-try-runtime",
    "frame-system/try-runtime",
    "fp-self-contained/try-runtime",
    "cumulus-pallet-aura-ext/try-runtime",
    "cumulus-pallet-dmp-queue/try-runtime",
    "cumulus-pallet-parachain-system/try-runtime",
    "cumulus-pallet-xcm/try-runtime",
    "cumulus-pallet-xcmp-queue/try-runtime",
    "frame-try-runtime/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-authorship/try-runtime",
    "pallet-assets/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-collator-selection/try-runtime",
    "pallet-collective/try-runtime",
    "pallet-identity/try-runtime",
	"pallet-proxy/try-runtime",
    "pallet-session/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-motion/try-runtime",
    "pallet-did/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-xcm/try-runtime",
    "pallet-utility/try-runtime",
    "parachain-info/try-runtime",
    "pallet-membership/try-runtime",
    "pallet-multisig/try-runtime",
    "pallet-preimage/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-treasury/try-runtime",
    "pallet-evm/try-runtime",
    "pallet-ethereum/try-runtime",
    "pallet-base-fee/try-runtime",
    "pallet-xc-asset-config/try-runtime",
    "pallet-block-reward/try-runtime",
]
# Set timing constants (e.g. session period) to faster versions to speed up testing.
fast-runtime = []
