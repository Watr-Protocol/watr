---
# Test run with https://www.npmjs.com/package/@parity/parachains-integration-tests
settings:
  chains:
    relay_chain: &relay_chain
      wsPort: 9800
    statemint_parachain: &stmt_parachain
      wsPort: 9810
      paraId: &stmt_id 1000
    watr_parachain: &watr_parachain
      wsPort: 9820
      paraId: &watr_id 2058
  variables:
    common:
      amount: &amount 2000000000000
      require_weight_at_most:
        &weight_at_most { refTime: 1000000000, proofSize: 200000 }
      weight_threshold:
        &weight_threshold { refTime: [10, 10], proofSize: [10, 10] }
      hrmp_channels:
        proposed_max_capacity: &max_capacity 8
        proposed_max_message_size: &max_message_size 8192
        channel:
          &channel {
            maxCapacity: 8,
            maxTotalSize: 8192,
            maxMessageSize: 8192,
            msgCount: 0,
            totalSize: 0,
            mqcHead: null,
            senderDeposit: 0,
            recipientDeposit: 0,
          }
    chains:
      relay_chain:
        sudo:
          signer: &rc_sudo_signer //Alice
        destinations:
          statemint:
            &rc->stmt_dest {
              v3: { 0, interior: { x1: { parachain: *stmt_id } } },
            }
        dot: &rc_dot { concrete: { 0, interior: { here: true } } }
        dot_fungible:
          &rc_dot_fungible { id: *rc_dot, fun: { fungible: *amount } }
      statemint_parachain:
        sovereign_account: &stmt_sovereign 5Ec4AhPZk8STuex8Wsi9TwDtJQxKqzPJRCH7348Xtcs9vZLJ
        destinations:
          relay_chain:
            &stmt->rc_dest { v3: { parents: 1, interior: { here: true } } }
      watr_parachain:
        sudo:
          signer: &watr_sudo_signer //Alice
        sovereign_account: &watr_sovereign 5Ec4AhNoGMRn8j7rpcumbokVMzWeTNdqw42r7pcH8dtqH29G
        destinations:
          relay_chain:
            &watr->rc_dest { v3: { parents: 1, interior: { here: true } } }
tests:
  - name: HRMP
    beforeEach:
      - name: DEPENDENCY | Watr Parachain Sovereign account in the Relay Chain needs to be funded
        actions:
          - extrinsics:
              - chain: *relay_chain
                signer: *rc_sudo_signer
                pallet: balances
                call: transfer
                args: [
                    *watr_sovereign, # destination
                    *amount, # value
                  ]
                events:
                  - name: balances.Transfer

      - name: DEPENDENCY | Statemint Parachain Sovereign account in the Relay Chain needs to be funded
        actions:
          - extrinsics:
              - chain: *relay_chain
                signer: *rc_sudo_signer
                pallet: balances
                call: transfer
                args: [
                    *stmt_sovereign, # destination
                    *amount, # value
                  ]
                events:
                  - name: balances.Transfer
    describes:
      - name: hrmp.forceOpenHrmpChannel (Watr Parachain → Statemint Parachain)
        its:
          - name: Open Watr Parachain to Statemint Parachain
            actions:
              - extrinsics:
                  - chain: *relay_chain
                    signer: *rc_sudo_signer
                    sudo: true
                    pallet: hrmp
                    call: forceOpenHrmpChannel
                    args: [*watr_id, *stmt_id, *max_capacity, *max_message_size]
                    events:
                      - name: sudo.Sudid
                        result: { sudoResult: Ok }
                      - name: hrmp.HrmpChannelForceOpened

      - name: hrmp.forceOpenHrmpChannel (Statemint Parachain → Watr Parachain)
        its:
          - name: Open Statemint Parachain to Watr Parachain
            actions:
              - extrinsics:
                  - chain: *relay_chain
                    signer: *rc_sudo_signer
                    sudo: true
                    pallet: hrmp
                    call: forceOpenHrmpChannel
                    args: [*stmt_id, *watr_id, *max_capacity, *max_message_size]
                    events:
                      - name: sudo.Sudid
                        result: { sudoResult: Ok }
                      - name: hrmp.HrmpChannelForceOpened

      - name: hrmp.forceProcessHrmpOpen (make sure all the channels are open)
        its:
          - name: Make sure all the pending channels are open
            actions:
              - extrinsics:
                  - chain: *relay_chain
                    signer: *rc_sudo_signer
                    sudo: true
                    pallet: hrmp
                    call: forceProcessHrmpOpen
                    args: [2]
                    events:
                      - name: sudo.Sudid
                        result: { sudoResult: Ok }
